{"version":3,"file":"static/js/942.bebde5b8.chunk.js","mappings":"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","sources":["pages/MovieDetails/StyledMovieDetails.jsx","pages/MovieDetails/MovieDetails.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  margin-top: 25px;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  width: 230px;\n  height: 30px;\n  border: 1px solid black;\n  border-radius: 8px;\n  font-size: 18px;\n`;\n\nexport const Icon = styled(AiOutlineArrowLeft)`\n  margin-right: 4px;\n  margin-top: 2px;\n  font-size: 18px;\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/API';\nimport { BackLink, Icon } from './StyledMovieDetails';\n\nconst defaultImg =\n  'https://moviemill.com/template_1/img/default-movie-portrait.jpg';\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location?.state?.from ?? '/';\n  const abortCtrl = useRef();\n  useEffect(() => {\n    if (abortCtrl.current) {\n      abortCtrl.current.abort();\n    }\n\n    abortCtrl.current = new AbortController();\n    getMovieDetails({ movieId }, abortCtrl.current.signal)\n      .then(response => {\n        setMovie(response);\n        setError(null);\n      })\n      .catch(err => {\n        if (err.code !== 'ERR_CANCELED') {\n          setError(err.message);\n        }\n      });\n  }, [movieId, error]);\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>\n        <Icon />\n        Back to the list of movies\n      </BackLink>\n      <h1>\n        {movie.title} ({movie.release_date && movie.release_date.slice(0, 4)})\n      </h1>\n      <img\n        src={\n          movie.poster_path !== null\n            ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n            : defaultImg\n        }\n        alt={movie.title}\n        width={300}\n      />\n      <p>\n        <b>User score:</b> {movie.vote_average && movie.vote_average.toFixed(1)}\n      </p>\n      <p>\n        <b>Overview:</b> {movie.overview ? movie.overview : 'No overview'}\n      </p>\n      <p>\n        {' '}\n        <b>Genres:</b>\n      </p>\n      <ul>\n        {movie.genres &&\n          movie.genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n      </ul>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ ...location.state }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ ...location.state }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'c4ae0d1c8ef3d257c8b5fa435eb44c06';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async signal => {\n  const response = await axios.get(`${baseURL}trending/movie/day`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieCast = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}/credits`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieReviews = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}/reviews`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieByRequest = async (query, signal) => {\n  const response = await axios.get(\n    `${baseURL}search/movie?query=${query}&language=en-US&page=1`,\n    { signal, params: { api_key: API_KEY } }\n  );\n  return response.data;\n};\n"],"names":["BackLink","styled","Link","Icon","AiOutlineArrowLeft","useState","movie","setMovie","error","setError","movieId","useParams","location","useLocation","backLinkHref","state","from","abortCtrl","useRef","useEffect","current","abort","AbortController","getMovieDetails","signal","then","response","catch","err","code","message","to","title","release_date","slice","src","poster_path","alt","width","vote_average","toFixed","overview","genres","map","genre","name","id","Suspense","fallback","API_KEY","baseURL","getTrendingMovies","axios","params","api_key","data","getMovieCast","getMovieReviews","getMovieByRequest","query"],"sourceRoot":""}