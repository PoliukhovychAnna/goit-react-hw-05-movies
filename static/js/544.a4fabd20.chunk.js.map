{"version":3,"file":"static/js/544.a4fabd20.chunk.js","mappings":"mMA+DA,UAjDa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAYC,EAAAA,EAAAA,UAmBlB,OAjBAC,EAAAA,EAAAA,YAAU,WACJF,EAAUG,SACZH,EAAUG,QAAQC,QAGpBJ,EAAUG,QAAU,IAAIE,iBACxBC,EAAAA,EAAAA,IAAkBN,EAAUG,QAAQI,QACjCC,MAAK,SAAAC,GACJZ,EAAUY,EAASC,SACnBX,EAAS,KACV,IACAY,OAAM,SAAAC,GACY,iBAAbA,EAAIC,MACNd,EAASa,EAAIE,QAEhB,GACJ,GAAE,CAAChB,KAEF,UAAC,KAAD,YACE,SAAC,KAAD,UAAS,4BACT,SAAC,KAAD,UACGF,EAAOmB,KAAI,SAAAC,GACV,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAYC,GAAE,iBAAYD,EAAME,IAAhC,WACE,SAAC,KAAD,CACEC,IACwB,OAAtBH,EAAMI,YAAN,yCACsCJ,EAAMI,aAlC9D,kEAqCgBC,IAAKL,EAAMM,MACXC,MAAO,OAET,SAAC,KAAD,UAAaP,EAAMM,YAXRN,EAAME,GAexB,QAIR,C,uPC1DYM,EAAYC,EAAAA,GAAAA,IAAH,0CAITC,EAAUD,EAAAA,GAAAA,GAAH,mIAQPE,EAAaF,EAAAA,GAAAA,GAAH,gJASVG,EAAWH,EAAAA,GAAAA,GAAH,+WAeRI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,sGAOVM,EAAaN,EAAAA,GAAAA,EAAH,sJASVO,EAAMP,EAAAA,GAAAA,IAAH,wG,mMCrDVQ,EAAU,mCACVC,EAAU,gCAEH5B,EAAiB,mCAAG,WAAMC,GAAN,uFACR4B,EAAAA,EAAAA,IAAA,UAAaD,EAAb,sBAA0C,CAC/D3B,OAAAA,EACA6B,OAAQ,CAAEC,QAASJ,KAHU,cACzBxB,EADyB,yBAKxBA,EAAS6B,MALe,2CAAH,sDAQjBC,EAAe,mCAAG,aAAoBhC,GAApB,gFAASiC,EAAT,EAASA,QAAT,SACNL,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA6BM,GAAW,CAC7DjC,OAAAA,EACA6B,OAAQ,CAAEC,QAASJ,KAHQ,cACvBxB,EADuB,yBAKtBA,EAAS6B,MALa,2CAAH,wDAQfG,EAAY,mCAAG,aAAoBlC,GAApB,gFAASiC,EAAT,EAASA,QAAT,SACHL,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA6BM,EAA7B,YAAgD,CACrEjC,OAAAA,EACA6B,OAAQ,CAAEC,QAASJ,KAHK,cACpBxB,EADoB,yBAKnBA,EAAS6B,MALU,2CAAH,wDAQZI,EAAe,mCAAG,aAAoBnC,GAApB,gFAASiC,EAAT,EAASA,QAAT,SACNL,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA6BM,EAA7B,YAAgD,CACrEjC,OAAAA,EACA6B,OAAQ,CAAEC,QAASJ,KAHQ,cACvBxB,EADuB,yBAKtBA,EAAS6B,MALa,2CAAH,wDAQfK,EAAiB,mCAAG,WAAOC,EAAOrC,GAAd,uFACR4B,EAAAA,EAAAA,IAAA,UAClBD,EADkB,8BACWU,EADX,0BAErB,CAAErC,OAAAA,EAAQ6B,OAAQ,CAAEC,QAASJ,KAHA,cACzBxB,EADyB,yBAKxBA,EAAS6B,MALe,2CAAH,uD","sources":["pages/Home/Home.jsx","pages/Home/StyledHome.jsx","services/API.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { getTrendingMovies } from 'services/API';\nimport {\n  Container,\n  Heading,\n  MoviesList,\n  ListItem,\n  StyledLink,\n  MovieTitle,\n  Img,\n} from './StyledHome';\n\nconst defaultImg =\n  'https://moviemill.com/template_1/img/default-movie-portrait.jpg';\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const abortCtrl = useRef();\n\n  useEffect(() => {\n    if (abortCtrl.current) {\n      abortCtrl.current.abort();\n    }\n\n    abortCtrl.current = new AbortController();\n    getTrendingMovies(abortCtrl.current.signal)\n      .then(response => {\n        setMovies(response.results);\n        setError(null);\n      })\n      .catch(err => {\n        if (err.code !== 'ERR_CANCELED') {\n          setError(err.message);\n        }\n      });\n  }, [error]);\n  return (\n    <Container>\n      <Heading>Trending movies today </Heading>\n      <MoviesList>\n        {movies.map(movie => {\n          return (\n            <ListItem key={movie.id}>\n              <StyledLink to={`movies/${movie.id}`}>\n                <Img\n                  src={\n                    movie.poster_path !== null\n                      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                      : defaultImg\n                  }\n                  alt={movie.title}\n                  width={200}\n                />\n                <MovieTitle>{movie.title}</MovieTitle>\n              </StyledLink>\n            </ListItem>\n          );\n        })}\n      </MoviesList>\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 15px;\n`;\n\nexport const Heading = styled.h1`\n  font-size: 28px;\n  font-weight: 800;\n  color: #9933ff;\n  text-align: center;\n  margin-bottom: 35px;\n`;\n\nexport const MoviesList = styled.ul`\n  padding: 0;\n  justify-content: center;\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 70px;\n  row-gap: 50px;\n`;\n\nexport const ListItem = styled.li`\n  background-color: #ccccff;\n  width: 210px;\n  border: 2px solid #ccccff;\n  border-radius: 5px;\n  transition: all 300ms cubic-bezier(0.39, 0.575, 0.565, 1);\n  background-color: #ccccff;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    box-shadow: 0px 0px 26px 8px hsl(270, 100%, 60%, 0.664);\n    color: hsla(323, 87%, 50%, 0.664);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  color: black;\n`;\n\nexport const MovieTitle = styled.p`\n  padding: 4px;\n  font-size: 18px;\n  font-weight: 500;\n  width: 200px;\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  border-top-right-radius: 5px;\n  border-top-left-radius: 5px;\n`;\n","import axios from 'axios';\n\nconst API_KEY = 'c4ae0d1c8ef3d257c8b5fa435eb44c06';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async signal => {\n  const response = await axios.get(`${baseURL}trending/movie/day`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieCast = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}/credits`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieReviews = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}/reviews`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieByRequest = async (query, signal) => {\n  const response = await axios.get(\n    `${baseURL}search/movie?query=${query}&language=en-US&page=1`,\n    { signal, params: { api_key: API_KEY } }\n  );\n  return response.data;\n};\n"],"names":["useState","movies","setMovies","error","setError","abortCtrl","useRef","useEffect","current","abort","AbortController","getTrendingMovies","signal","then","response","results","catch","err","code","message","map","movie","to","id","src","poster_path","alt","title","width","Container","styled","Heading","MoviesList","ListItem","StyledLink","Link","MovieTitle","Img","API_KEY","baseURL","axios","params","api_key","data","getMovieDetails","movieId","getMovieCast","getMovieReviews","getMovieByRequest","query"],"sourceRoot":""}