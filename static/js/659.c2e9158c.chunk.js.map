{"version":3,"file":"static/js/659.c2e9158c.chunk.js","mappings":"yPAEaA,EAAaC,EAAAA,GAAAA,GAAH,sHAQVC,EAAWD,EAAAA,GAAAA,GAAH,sFAMRE,EAAOF,EAAAA,GAAAA,EAAH,sC,SCsCjB,EA9Ca,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAYC,EAAAA,EAAAA,UAmBlB,OAlBAC,EAAAA,EAAAA,YAAU,WACJF,EAAUG,SACZH,EAAUG,QAAQC,QAGpBJ,EAAUG,QAAU,IAAIE,iBACxBC,EAAAA,EAAAA,IAAa,CAAER,QAAAA,GAAWE,EAAUG,QAAQI,QACzCC,MAAK,SAAAC,GACJd,EAAQc,EAASf,MACjBG,EAAS,KACV,IACAa,OAAM,SAAAC,GACY,iBAAbA,EAAIC,MACNf,EAASc,EAAIE,QAEhB,GACJ,GAAE,CAACf,EAASF,KAGX,SAACP,EAAD,UACGK,EAAKoB,OAAS,EACXpB,EAAKqB,KAAI,SAAAC,GAAK,OACZ,UAACzB,EAAD,YACE,gBACE0B,IACyB,OAAvBD,EAAME,aAAN,yCACsCF,EAAME,cAjC5D,4JAoCcC,IAAKH,EAAMI,KACXC,MAAO,IACPC,OAAQ,OAEV,SAAC9B,EAAD,UAAOwB,EAAMI,QACb,UAAC5B,EAAD,WAAM,eAAawB,EAAMO,eAZZP,EAAMQ,QADT,IAgBd,sDAGT,C,mMCnDKC,EAAU,mCACVC,EAAU,gCAEHC,EAAiB,mCAAG,WAAMpB,GAAN,uFACRqB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sBAA0C,CAC/DnB,OAAAA,EACAsB,OAAQ,CAAEC,QAASL,KAHU,cACzBhB,EADyB,yBAKxBA,EAASsB,MALe,2CAAH,sDAQjBC,EAAe,mCAAG,aAAoBzB,GAApB,gFAAST,EAAT,EAASA,QAAT,SACN8B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6B5B,GAAW,CAC7DS,OAAAA,EACAsB,OAAQ,CAAEC,QAASL,KAHQ,cACvBhB,EADuB,yBAKtBA,EAASsB,MALa,2CAAH,wDAQfzB,EAAY,mCAAG,aAAoBC,GAApB,gFAAST,EAAT,EAASA,QAAT,SACH8B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6B5B,EAA7B,YAAgD,CACrES,OAAAA,EACAsB,OAAQ,CAAEC,QAASL,KAHK,cACpBhB,EADoB,yBAKnBA,EAASsB,MALU,2CAAH,wDAQZE,EAAe,mCAAG,aAAoB1B,GAApB,gFAAST,EAAT,EAASA,QAAT,SACN8B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6B5B,EAA7B,YAAgD,CACrES,OAAAA,EACAsB,OAAQ,CAAEC,QAASL,KAHQ,cACvBhB,EADuB,yBAKtBA,EAASsB,MALa,2CAAH,wDAQfG,EAAiB,mCAAG,WAAOC,EAAO5B,GAAd,uFACRqB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,8BACWS,EADX,0BAErB,CAAE5B,OAAAA,EAAQsB,OAAQ,CAAEC,QAASL,KAHA,cACzBhB,EADyB,yBAKxBA,EAASsB,MALe,2CAAH,uD","sources":["components/Cast/StyledCast.jsx","components/Cast/Cast.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledCast = styled.ul`\n  width: 600px;\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 20px;\n  column-gap: 20px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 150px;\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/API';\nimport { StyledCast, ListItem, Text } from './StyledCast';\n\nconst defaultUser =\n  'https://static.vecteezy.com/system/resources/previews/001/840/618/original/picture-profile-icon-male-icon-human-or-people-sign-and-symbol-free-vector.jpg';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const abortCtrl = useRef();\n  useEffect(() => {\n    if (abortCtrl.current) {\n      abortCtrl.current.abort();\n    }\n\n    abortCtrl.current = new AbortController();\n    getMovieCast({ movieId }, abortCtrl.current.signal)\n      .then(response => {\n        setCast(response.cast);\n        setError(null);\n      })\n      .catch(err => {\n        if (err.code !== 'ERR_CANCELED') {\n          setError(err.message);\n        }\n      });\n  }, [movieId, error]);\n\n  return (\n    <StyledCast>\n      {cast.length > 0\n        ? cast.map(actor => (\n            <ListItem key={actor.cast_id}>\n              <img\n                src={\n                  actor.profile_path !== null\n                    ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                    : defaultUser\n                }\n                alt={actor.name}\n                width={133}\n                height={195}\n              />\n              <Text>{actor.name}</Text>\n              <Text> Character: {actor.character}</Text>\n            </ListItem>\n          ))\n        : \"Sorry, there is no information about movie's cast.\"}\n    </StyledCast>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'c4ae0d1c8ef3d257c8b5fa435eb44c06';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async signal => {\n  const response = await axios.get(`${baseURL}trending/movie/day`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieCast = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}/credits`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieReviews = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}/reviews`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieByRequest = async (query, signal) => {\n  const response = await axios.get(\n    `${baseURL}search/movie?query=${query}&language=en-US&page=1`,\n    { signal, params: { api_key: API_KEY } }\n  );\n  return response.data;\n};\n"],"names":["StyledCast","styled","ListItem","Text","useState","cast","setCast","error","setError","movieId","useParams","abortCtrl","useRef","useEffect","current","abort","AbortController","getMovieCast","signal","then","response","catch","err","code","message","length","map","actor","src","profile_path","alt","name","width","height","character","cast_id","API_KEY","baseURL","getTrendingMovies","axios","params","api_key","data","getMovieDetails","getMovieReviews","getMovieByRequest","query"],"sourceRoot":""}