{"version":3,"file":"static/js/247.f28e8c80.chunk.js","mappings":"8LA8CA,UAvCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAYC,EAAAA,EAAAA,UAelB,OAdAC,EAAAA,EAAAA,YAAU,WACJF,EAAUG,SACZH,EAAUG,QAAQC,QAGpBJ,EAAUG,QAAU,IAAIE,iBACxBC,EAAAA,EAAAA,IAAa,CAAER,QAAAA,GAAWE,EAAUG,QAAQI,QACzCC,MAAK,SAAAC,GACJZ,EAAQY,EAASb,KAClB,IACAc,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACb,IAEJc,QAAQC,IAAIjB,IAEV,wBACGA,EAAKkB,OAAS,EACXlB,EAAKmB,KAAI,SAAAC,GAAK,OACZ,2BACE,gBACEC,IACyB,OAAvBD,EAAME,aAAN,yCACsCF,EAAME,cA5B5D,4JA+BcC,IAAKH,EAAMI,KACXC,MAAO,MAERL,EAAMI,KAVT,eAU2BJ,EAAMM,YAVxBN,EAAMO,QADH,IAcd,sDAGT,C,+LC3CKC,EAAU,mCACVC,EAAU,gCAEHC,EAAiB,mCAAG,WAAMnB,GAAN,uFACRoB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sBAA0C,CAC/DlB,OAAAA,EACAqB,OAAQ,CAAEC,QAASL,KAHU,cACzBf,EADyB,yBAKxBA,EAASqB,MALe,2CAAH,sDAQjBC,EAAe,mCAAG,8FAASjC,EAAT,EAASA,QAAT,SACN6B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6B3B,GAAW,CAC7D8B,OAAQ,CAAEC,QAASL,KAFQ,cACvBf,EADuB,yBAItBA,EAASqB,MAJa,2CAAH,sDAOfxB,EAAY,mCAAG,aAAoBC,GAApB,gFAAST,EAAT,EAASA,QAAT,SACH6B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6B3B,EAA7B,YAAgD,CACrES,OAAAA,EACAqB,OAAQ,CAAEC,QAASL,KAHK,cACpBf,EADoB,yBAKnBA,EAASqB,MALU,2CAAH,wDAQZE,EAAe,mCAAG,aAAoBzB,GAApB,gFAAST,EAAT,EAASA,QAAT,SACN6B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6B3B,EAA7B,YAAgD,CACrES,OAAAA,EACAqB,OAAQ,CAAEC,QAASL,KAHQ,cACvBf,EADuB,yBAKtBA,EAASqB,MALa,2CAAH,wDAQfG,EAAiB,mCAAG,WAAOC,EAAO3B,GAAd,uFACRoB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,8BACWS,EADX,0BAErB,CAAE3B,OAAAA,EAAQqB,OAAQ,CAAEC,QAASL,KAHA,cACzBf,EADyB,OAK/BG,QAAQC,IAAIJ,EAASqB,MALU,kBAMxBrB,EAASqB,MANe,2CAAH,uD","sources":["components/Cast/Cast.jsx","services/API.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/API';\n\nconst defaultUser =\n  'https://static.vecteezy.com/system/resources/previews/001/840/618/original/picture-profile-icon-male-icon-human-or-people-sign-and-symbol-free-vector.jpg';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const abortCtrl = useRef();\n  useEffect(() => {\n    if (abortCtrl.current) {\n      abortCtrl.current.abort();\n    }\n\n    abortCtrl.current = new AbortController();\n    getMovieCast({ movieId }, abortCtrl.current.signal)\n      .then(response => {\n        setCast(response.cast);\n      })\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  console.log(cast);\n  return (\n    <ul>\n      {cast.length > 0\n        ? cast.map(actor => (\n            <li key={actor.cast_id}>\n              <img\n                src={\n                  actor.profile_path !== null\n                    ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                    : defaultUser\n                }\n                alt={actor.name}\n                width={150}\n              />\n              {actor.name} Character: {actor.character}\n            </li>\n          ))\n        : \"Sorry, there is no information about movie's cast.\"}\n    </ul>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'c4ae0d1c8ef3d257c8b5fa435eb44c06';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async signal => {\n  const response = await axios.get(`${baseURL}trending/movie/day`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async ({ movieId }) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieCast = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}/credits`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieReviews = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}/reviews`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieByRequest = async (query, signal) => {\n  const response = await axios.get(\n    `${baseURL}search/movie?query=${query}&language=en-US&page=1`,\n    { signal, params: { api_key: API_KEY } }\n  );\n  console.log(response.data);\n  return response.data;\n};\n"],"names":["useState","cast","setCast","movieId","useParams","abortCtrl","useRef","useEffect","current","abort","AbortController","getMovieCast","signal","then","response","catch","err","console","log","length","map","actor","src","profile_path","alt","name","width","character","cast_id","API_KEY","baseURL","getTrendingMovies","axios","params","api_key","data","getMovieDetails","getMovieReviews","getMovieByRequest","query"],"sourceRoot":""}