{"version":3,"file":"static/js/650.bfb945db.chunk.js","mappings":"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","sources":["components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","services/API.js"],"sourcesContent":["import { Formik, Field, Form } from 'formik';\nimport { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const Searchbar = ({ onQueryChange }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('searchQuery') ?? '';\n\n  useEffect(() => {\n    if (!movieName) return;\n    onQueryChange(movieName);\n  }, [movieName, onQueryChange]);\n\n  const handleSearchSubmit = (values, action) => {\n    const searchQuery = values.query;\n    const nextParams = searchQuery !== '' ? { searchQuery } : {};\n    setSearchParams(nextParams);\n\n    action.resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ query: '' }} onSubmit={handleSearchSubmit}>\n      <Form>\n        <Field\n          name=\"query\"\n          type=\"text\"\n          placeholder=\"Movie name\"\n          required\n        ></Field>\n        <button type=\"submit\">Search</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getMovieByRequest } from 'services/API';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [query, setQuery] = useState('');\n  //   const [currentPage, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  //   const [isShowButton, setIsShowButton] = useState(false);\n  const abortCtrl = useRef();\n  const location = useLocation();\n\n  const chooseURL = id => {\n    return location.pathname === '/movies' ? `${id}` : `movies/${id}`;\n  };\n\n  console.log(query);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    const getMovieInfo = async () => {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n\n      abortCtrl.current = new AbortController();\n\n      try {\n        setError(null);\n\n        const movies = await getMovieByRequest(query, abortCtrl.current.signal);\n\n        if (movies.length === 0) {\n          return 'Sorry, no movies for your query...';\n        }\n\n        setMovies(movies);\n        setError(null);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(error.message);\n        }\n      } finally {\n      }\n    };\n    getMovieInfo();\n  }, [query]);\n\n  const onQueryChange = searchQuery => {\n    if (searchQuery === query) {\n      return;\n    }\n    setQuery(searchQuery);\n    setError(null);\n  };\n\n  console.log(movies);\n\n  return (\n    <>\n      <Searchbar onQueryChange={onQueryChange} />\n      {error && <p>{error}</p>}\n      {movies && (\n        <ul>\n          {movies.results.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={chooseURL(movie.id)} state={{ from: location }}>\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'c4ae0d1c8ef3d257c8b5fa435eb44c06';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async signal => {\n  const response = await axios.get(`${baseURL}trending/movie/day`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async ({ movieId }) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieCast = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}/credits`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieReviews = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}/reviews`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieByRequest = async (query, signal) => {\n  const response = await axios.get(\n    `${baseURL}search/movie?query=${query}&language=en-US&page=1`,\n    { signal, params: { api_key: API_KEY } }\n  );\n  console.log(response.data);\n  return response.data;\n};\n"],"names":["Searchbar","onQueryChange","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","initialValues","query","onSubmit","values","action","searchQuery","resetForm","name","type","placeholder","required","useState","movies","setMovies","setQuery","error","setError","abortCtrl","useRef","location","useLocation","console","log","getMovieInfo","current","abort","AbortController","getMovieByRequest","signal","length","code","message","results","map","movie","to","id","pathname","state","from","title","API_KEY","baseURL","getTrendingMovies","axios","params","api_key","response","data","getMovieDetails","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}