{"version":3,"file":"static/js/950.248e536d.chunk.js","mappings":"sPAGaA,EAAe,mCAAG,8FAASC,EAAT,EAASA,QACtCC,QAAQC,IAAIF,GADiB,SAENG,EAAAA,EAAAA,IAAA,UAHb,uCAGa,OAAmBH,GAAW,CACnDI,OAAQ,CAAEC,QALE,sCAEe,cAEvBC,EAFuB,yBAKtBA,EAASC,MALa,2CAAH,sD,SC6C5B,EA7CqB,WACnB,OAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQV,GAAYW,EAAAA,EAAAA,MAAZX,QAYR,OAVAY,EAAAA,EAAAA,YAAU,WACRb,EAAgB,CAAEC,QAAAA,IACfa,MAAK,SAAAP,GACJI,EAASJ,EACV,IACAQ,OAAM,SAAAC,GAAG,OAAId,QAAQC,IAAIa,EAAhB,GACb,GAAE,CAACf,IAEJC,QAAQC,IAAIO,IAGV,iCACE,0BACGA,EAAMO,MADT,KACkBP,EAAMQ,cAAgBR,EAAMQ,aAAaC,MAAM,EAAG,GADpE,QAGA,gBACEC,IAAG,yCAAoCV,EAAMW,aAC7CC,IAAKZ,EAAMO,MACXM,MAAO,OAET,0BACE,uCADF,IACsBb,EAAMc,cAAgBd,EAAMc,aAAaC,QAAQ,OAEvE,0BACE,qCADF,IACoBf,EAAMgB,aAE1B,yBACG,KACD,uCAEF,wBACGhB,EAAMiB,QACLjB,EAAMiB,OAAOC,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAnB,OAE1B,SAAC,EAAAC,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,QAIP,C","sources":["services/getMovieDetails.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'c4ae0d1c8ef3d257c8b5fa435eb44c06';\nconst URL = 'https://api.themoviedb.org/3/movie/';\nexport const getMovieDetails = async ({ movieId }) => {\n  console.log(movieId);\n  const response = await axios.get(`${URL}${movieId}`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/getMovieDetails';\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  // const abortCtrl = useRef();\n  useEffect(() => {\n    getMovieDetails({ movieId })\n      .then(response => {\n        setMovie(response);\n      })\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  console.log(movie);\n\n  return (\n    <>\n      <h1>\n        {movie.title} ({movie.release_date && movie.release_date.slice(0, 4)})\n      </h1>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n        alt={movie.title}\n        width={300}\n      />\n      <p>\n        <b>User score:</b> {movie.vote_average && movie.vote_average.toFixed(1)}\n      </p>\n      <p>\n        <b>Overview:</b> {movie.overview}\n      </p>\n      <p>\n        {' '}\n        <b>Genres:</b>\n      </p>\n      <ul>\n        {movie.genres &&\n          movie.genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n      </ul>\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["getMovieDetails","movieId","console","log","axios","params","api_key","response","data","useState","movie","setMovie","useParams","useEffect","then","catch","err","title","release_date","slice","src","poster_path","alt","width","vote_average","toFixed","overview","genres","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}