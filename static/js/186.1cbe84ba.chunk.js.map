{"version":3,"file":"static/js/186.1cbe84ba.chunk.js","mappings":"8LAyCA,UArCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAYC,EAAAA,EAAAA,UAiBlB,OAhBAC,EAAAA,EAAAA,YAAU,WACJF,EAAUG,SACZH,EAAUG,QAAQC,QAGpBJ,EAAUG,QAAU,IAAIE,iBAExBC,EAAAA,EAAAA,IAAgB,CAAER,QAAAA,GAAWE,EAAUG,QAAQI,QAC5CC,MAAK,SAAAC,GACJZ,EAAWY,EAASC,QACrB,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACd,IAEJe,QAAQC,IAAIlB,GAELA,EAAQmB,OAAS,GACtB,wBACGnB,EAAQoB,KAAI,SAAAC,GAAM,OACjB,2BACE,0BACE,mCADF,IACkBA,EAAOC,WAEzB,0BACE,oCADF,IACmBD,EAAOE,aALnBF,EAAOG,GADC,MAYrB,2CAEH,C,+LCtCKC,EAAU,mCACVC,EAAU,gCAEHC,EAAiB,mCAAG,WAAMhB,GAAN,uFACRiB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sBAA0C,CAC/Df,OAAAA,EACAkB,OAAQ,CAAEC,QAASL,KAHU,cACzBZ,EADyB,yBAKxBA,EAASkB,MALe,2CAAH,sDAQjBC,EAAe,mCAAG,8FAAS9B,EAAT,EAASA,QAAT,SACN0B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6BxB,GAAW,CAC7D2B,OAAQ,CAAEC,QAASL,KAFQ,cACvBZ,EADuB,yBAItBA,EAASkB,MAJa,2CAAH,sDAOfE,EAAY,mCAAG,aAAoBtB,GAApB,gFAAST,EAAT,EAASA,QAAT,SACH0B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6BxB,EAA7B,YAAgD,CACrES,OAAAA,EACAkB,OAAQ,CAAEC,QAASL,KAHK,cACpBZ,EADoB,yBAKnBA,EAASkB,MALU,2CAAH,wDAQZrB,EAAe,mCAAG,aAAoBC,GAApB,gFAAST,EAAT,EAASA,QAAT,SACN0B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6BxB,EAA7B,YAAgD,CACrES,OAAAA,EACAkB,OAAQ,CAAEC,QAASL,KAHQ,cACvBZ,EADuB,yBAKtBA,EAASkB,MALa,2CAAH,wDAQfG,EAAiB,mCAAG,WAAOC,EAAOxB,GAAd,uFACRiB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,8BACWS,EADX,0BAErB,CAAExB,OAAAA,EAAQkB,OAAQ,CAAEC,QAASL,KAHA,cACzBZ,EADyB,OAK/BI,QAAQC,IAAIL,EAASkB,MALU,kBAMxBlB,EAASkB,MANe,2CAAH,uD","sources":["components/Reviews/Reviews.jsx","services/API.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/API';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const abortCtrl = useRef();\n  useEffect(() => {\n    if (abortCtrl.current) {\n      abortCtrl.current.abort();\n    }\n\n    abortCtrl.current = new AbortController();\n\n    getMovieReviews({ movieId }, abortCtrl.current.signal)\n      .then(response => {\n        setReviews(response.results);\n      })\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  console.log(reviews);\n\n  return reviews.length > 0 ? (\n    <ul>\n      {reviews.map(review => (\n        <li key={review.id}>\n          <p>\n            <b>Author:</b> {review.author}\n          </p>\n          <p>\n            <b>Comment:</b> {review.content}\n          </p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    \"We don't have any reviews for this movie.\"\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'c4ae0d1c8ef3d257c8b5fa435eb44c06';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async signal => {\n  const response = await axios.get(`${baseURL}trending/movie/day`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async ({ movieId }) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieCast = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}/credits`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieReviews = async ({ movieId }, signal) => {\n  const response = await axios.get(`${baseURL}movie/${movieId}/reviews`, {\n    signal,\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieByRequest = async (query, signal) => {\n  const response = await axios.get(\n    `${baseURL}search/movie?query=${query}&language=en-US&page=1`,\n    { signal, params: { api_key: API_KEY } }\n  );\n  console.log(response.data);\n  return response.data;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","abortCtrl","useRef","useEffect","current","abort","AbortController","getMovieReviews","signal","then","response","results","catch","err","console","log","length","map","review","author","content","id","API_KEY","baseURL","getTrendingMovies","axios","params","api_key","data","getMovieDetails","getMovieCast","getMovieByRequest","query"],"sourceRoot":""}